{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;AAA0D;;;;;;;AAWpD,MAAOC,YAAY;EAIvBC,YACEC,gBAAkC,EAC1BC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IALxB,KAAAC,YAAY,GAAa,EAAE;IAOzB,IAAI,CAACC,cAAc,GAAGH,gBAAgB,CAACI,cAAc;IAErDP,qDAAM,CAAC,MAAK;MACV,IAAI,CAACQ,wBAAwB,EAAE;IACjC,CAAC,CAAC;EACJ;EAEQA,wBAAwBA,CAAA;IAC9B,IAAI,IAAI,CAACH,YAAY,CAACI,MAAM,KAAK,CAAC,EAAE;MAClC,IAAI,CAACJ,YAAY,GAAG,IAAI,CAACC,cAAc,EAAE,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,CAAC;MAChE;;IAGF,MAAMC,UAAU,GAAG,IAAI,CAACP,cAAc,EAAE,CACrCI,GAAG,CAAEI,CAAC,IAAKA,CAAC,CAACF,EAAE,CAAC,CAChBG,MAAM,CAAEH,EAAE,IAAK,CAAC,IAAI,CAACP,YAAY,CAACW,QAAQ,CAACJ,EAAE,CAAC,CAAC;IAElDC,UAAU,CAACI,OAAO,CAAEL,EAAE,IAAI;MACxB,MAAMD,IAAI,GAAG,IAAI,CAACL,cAAc,EAAE,CAACS,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC,CAAC,CAAC;MACtE,IAAI,CAACR,cAAc,CAACc,GAAG,CAAC;QACtBC,QAAQ,EAAE,MAAM;QAChBC,OAAO,EAAE,WAAW;QACpBC,MAAM,EAAE,cAAcV,IAAI,CAACW,QAAQ,IAAIX,IAAI,CAACY,QAAQ;OACrD,CAAC;IACJ,CAAC,CAAC;IAEF,IAAI,CAAClB,YAAY,GAAG,IAAI,CAACC,cAAc,EAAE,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,CAAC;EAClE;EAAC,QAAAY,CAAA;qBAnCUvB,YAAY,EAAAwB,+DAAA,CAAAE,gFAAA,GAAAF,+DAAA,CAAAI,uDAAA;EAAA;EAAA,QAAAE,EAAA;UAAZ9B,YAAY;IAAA+B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCXzBb,4DAAA,WAAM;QACJA,uDAAA,mBAA6B;QAE7BA,4DAAA,cAAwB;QACtBA,uDAAA,oBAA+B;QACjCA,0DAAA,EAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLiD;AAEb;AACW;AACT;AAEA;AACkB;AAEI;AACA;AACf;AACM;AACH;AACZ;AACkC;;;AAgCzE,MAAO6B,SAAS;EAAA,QAAA9B,CAAA;qBAAT8B,SAAS;EAAA;EAAA,QAAAvB,EAAA;UAATuB,SAAS;IAAAC,SAAA,GAFRtD,wDAAY;EAAA;EAAA,QAAAuD,EAAA;eADb,CAAC1B,uDAAc,CAAC;IAAA2B,OAAA,GAjBzBJ,yFAAuB,EACvBV,qEAAa,EACbS,kEAAa,EACbP,mEAAgB,EAChBD,wDAAW,EACXE,kEAAoB,CAAC,CACnB;MACEa,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE,MAAM;MACjBC,UAAU,EAAE;KACb,EACD;MAAEF,IAAI,EAAE,WAAW;MAAEG,SAAS,EAAEb,8EAAkBA;IAAA,CAAE,EACpD;MAAEU,IAAI,EAAE,MAAM;MAAEG,SAAS,EAAEZ,+DAAaA;IAAA,CAAE,EAC1C;MAAES,IAAI,EAAE,QAAQ;MAAEG,SAAS,EAAEX,qEAAeA;IAAA,CAAE,EAC9C;MAAEQ,IAAI,EAAE,WAAW;MAAEG,SAAS,EAAEd,8EAAkBA;IAAA,CAAE,CACrD,CAAC;EAAA;;;sHAKOM,SAAS;IAAAS,YAAA,GA5BlB9D,wDAAY,EACZ8C,0EAAgB,EAChBC,8EAAkB,EAClBC,8EAAkB,EAClBC,+DAAa,EACbC,qEAAe;IAAAM,OAAA,GAGfJ,yFAAuB,EACvBV,qEAAa,EACbS,kEAAa,EACbP,mEAAgB,EAChBD,wDAAW,EAAAjB,0DAAA;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;IE5BXF,4DAAA,SAAI;IACEA,oDAAA,WAAI;IAAAA,0DAAA,EAAK;IACbA,4DAAA,SAAI;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAK;IACpBA,4DAAA,SAAI;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAK;;;;;IAKtBA,4DAAA,SAAI;IAEmBA,oDAAA,GAAkB;IAAAA,0DAAA,EAAI;IAC3CA,4DAAA,SAAI;IAAAA,oDAAA,GAAyB;IAAAA,0DAAA,EAAK;IAClCA,4DAAA,SAAI;IAAAA,oDAAA,GAAyB;IAAAA,0DAAA,EAAK;;;;IAH3BA,uDAAA,GAAsB;IAAtBA,wDAAA,SAAA0C,UAAA,CAAAC,OAAA,EAAA3C,2DAAA,CAAsB;IACRA,uDAAA,GAAkB;IAAlBA,+DAAA,CAAA0C,UAAA,CAAAI,IAAA,CAAkB;IACnC9C,uDAAA,GAAyB;IAAzBA,+DAAA,CAAA0C,UAAA,CAAAK,WAAA,CAAyB;IACzB/C,uDAAA,GAAyB;IAAzBA,+DAAA,CAAA0C,UAAA,CAAAM,WAAA,CAAyB;;;;;;ADH7B,MAAOzB,kBAAkB;EAG7B9C,YAAmBwE,SAA2B;IAA3B,KAAAA,SAAS,GAATA,SAAS;IAC1B,IAAI,CAACC,SAAS,GAAGD,SAAS,CAACE,KAAK,EAAE;EACpC;EAAC,QAAApD,CAAA;qBALUwB,kBAAkB,EAAAvB,+DAAA,CAAAE,yEAAA;EAAA;EAAA,QAAAI,EAAA;UAAlBiB,kBAAkB;IAAAhB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA0C,4BAAAxC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ/Bb,4DAAA,iBACiD;;QAC/CA,wDAAA,IAAAuD,yCAAA,yBAMc,IAAAC,yCAAA;QAUhBxD,0DAAA,EAAU;;;QAlBDA,wDAAA,UAAAA,yDAAA,OAAAc,GAAA,CAAAoC,SAAA,EAA8B,eAAAlD,6DAAA,IAAA2D,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAmB;;;;;;;;;;;;ICkBpD3D,4DAAA,SAAI;IACoBA,oDAAA,SAAE;IAAAA,0DAAA,EAAK;IAC7BA,4DAAA,YAA+B;IAAAA,uDAAA,qBAA0C;IAAAA,oDAAA,WAAI;IAAAA,0DAAA,EAAK;IAClFA,4DAAA,aACsB;IAAAA,uDAAA,qBAA0C;IAAAA,oDAAA,eAAQ;IAAAA,0DAAA,EAAK;IAC7EA,4DAAA,YAAsB;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAK;;;;;IAW3BA,4DAAA,YAAO;IAAAA,oDAAA,GAAsB;IAAAA,0DAAA,EAAQ;;;;IAA9BA,uDAAA,GAAsB;IAAtBA,+DAAA,CAAA4D,gBAAA,CAAAzE,EAAA,CAAsB;;;;;IAG7Ba,oDAAA,GACF;;;;IADEA,gEAAA,MAAA4D,gBAAA,CAAAzE,EAAA,MACF;;;;;;IAMEa,4DAAA,gBAGgB;IADTA,wDAAA,2BAAA+D,wFAAAC,MAAA;MAAAhE,2DAAA,CAAAkE,IAAA;MAAA,MAAAN,gBAAA,GAAA5D,2DAAA,GAAAoE,SAAA;MAAA,OAAapE,yDAAA,CAAA4D,gBAAA,CAAA9D,QAAA,GAAAkE,MAAA,CAC5B;IAAA,EADmD;IAF3ChE,0DAAA,EAGgB;;;;IADTA,wDAAA,YAAA4D,gBAAA,CAAA9D,QAAA,CAAoC;;;;;IAI3CE,oDAAA,GACF;;;;IADEA,gEAAA,MAAA4D,gBAAA,CAAA9D,QAAA,MACF;;;;;;IAMEE,4DAAA,gBAGgB;IADTA,wDAAA,2BAAAsE,yFAAAN,MAAA;MAAAhE,2DAAA,CAAAuE,IAAA;MAAA,MAAAX,gBAAA,GAAA5D,2DAAA,GAAAoE,SAAA;MAAA,OAAapE,yDAAA,CAAA4D,gBAAA,CAAA/D,QAAA,GAAAmE,MAAA,CAC5B;IAAA,EADmD;IAF3ChE,0DAAA,EAGgB;;;;IADTA,wDAAA,YAAA4D,gBAAA,CAAA/D,QAAA,CAAoC;;;;;IAI3CG,oDAAA,GACF;;;;IADEA,gEAAA,MAAA4D,gBAAA,CAAA/D,QAAA,MACF;;;;;;IAKAG,4DAAA,iBAO+C;IADvCA,wDAAA,mBAAAwE,6EAAA;MAAAxE,2DAAA,CAAAyE,IAAA;MAAA,MAAAb,gBAAA,GAAA5D,2DAAA,GAAAoE,SAAA;MAAA,MAAAM,OAAA,GAAA1E,2DAAA;MAAA,OAASA,yDAAA,CAAA0E,OAAA,CAAAC,aAAA,CAAAf,gBAAA,CAA4B;IAAA,EAAC;IACC5D,0DAAA,EAAS;;;;;;IACxDA,4DAAA,iBAOqE;IAD7DA,wDAAA,mBAAA4E,6EAAA;MAAA5E,2DAAA,CAAA6E,IAAA;MAAA,MAAAjB,gBAAA,GAAA5D,2DAAA,GAAAoE,SAAA;MAAA,MAAAU,OAAA,GAAA9E,2DAAA;MAAA,OAASA,yDAAA,CAAA8E,OAAA,CAAAC,aAAA,CAAAnB,gBAAA,CAA4B;IAAA,EAAC;IACuB5D,0DAAA,EAAS;;;;;;IAC9EA,4DAAA,iBAO+D;IADvDA,wDAAA,mBAAAgF,6EAAA;MAAAhF,2DAAA,CAAAiF,IAAA;MAAA,MAAAC,OAAA,GAAAlF,2DAAA;MAAA,MAAA4D,gBAAA,GAAAsB,OAAA,CAAAd,SAAA;MAAA,MAAAe,KAAA,GAAAD,OAAA,CAAAE,QAAA;MAAA,MAAAC,OAAA,GAAArF,2DAAA;MAAA,OAASA,yDAAA,CAAAqF,OAAA,CAAAC,eAAA,CAAA1B,gBAAA,EAAAuB,KAAA,CAAkC;IAAA,EAAC;IACWnF,0DAAA,EAAS;;;;;IA9D9EA,4DAAA,aAAmC;IAG7BA,wDAAA,IAAAuF,wDAAA,0BAEc,IAAAC,wDAAA;IAIhBxF,0DAAA,EAAe;IAEjBA,4DAAA,SAAI;IAEAA,wDAAA,IAAAyF,wDAAA,0BAKc,IAAAC,wDAAA;IAIhB1F,0DAAA,EAAe;IAEjBA,4DAAA,SAAI;IAEAA,wDAAA,KAAA2F,yDAAA,0BAKc,KAAAC,yDAAA;IAIhB5F,0DAAA,EAAe;IAEjBA,4DAAA,UAAI;IAEAA,wDAAA,KAAA6F,oDAAA,qBAOwD,KAAAC,oDAAA,0BAAAC,oDAAA;IAiB1D/F,0DAAA,EAAM;;;;;IA/DNA,wDAAA,iBAAA4D,gBAAA,CAA8B;IAuCnB5D,uDAAA,IAAc;IAAdA,wDAAA,UAAAgG,UAAA,CAAc;IAQdhG,uDAAA,GAAa;IAAbA,wDAAA,SAAAgG,UAAA,CAAa;IAQbhG,uDAAA,GAAa;IAAbA,wDAAA,SAAAgG,UAAA,CAAa;;;;;;ADzE5B,MAAOxE,kBAAkB;EAK7B/C,YACUwH,YAAmB,EACpBvH,gBAAkC;IADjC,KAAAuH,YAAY,GAAZA,YAAY;IACb,KAAAvH,gBAAgB,GAAhBA,gBAAgB;IALzB,KAAAE,YAAY,GAAa,EAAE;IAC3B,KAAAsH,WAAW,GAAW,EAAE;IAMtB,IAAI,CAACD,YAAY,CAACE,QAAQ,CAAC,2BAA2B,CAAC;IACvD,IAAI,CAACtH,cAAc,GAAGH,gBAAgB,CAACI,cAAc;IAErDP,qDAAM,CAAC,MAAK;MACV,IAAI,CAAC0H,YAAY,CAACE,QAAQ,CACxB,8BAA8B,IAAI,CAACtH,cAAc,EAAE,CAACG,MAAM,IAAI,CAC/D;IACH,CAAC,CAAC;EACJ;EAEA2F,aAAaA,CAACyB,aAA4B,GAAG;EAE7CrB,aAAaA,CAACqB,aAA4B;IACxC,IAAI,CAAC1H,gBAAgB,CAClB2H,mBAAmB,CAClBD,aAAa,CAACjH,EAAE,EAChBiH,aAAa,CAACtG,QAAQ,EACtBsG,aAAa,CAACvG,QAAQ,CACvB,CACAyG,SAAS,EAAE;EAChB;EAEAhB,eAAeA,CAACc,aAA4B,EAAEG,KAAa,GAAG;EAE9DC,QAAQA,CAAA;IACN,IAAI,CAAC9H,gBAAgB,CAAC+H,gBAAgB,CAAC,IAAI,CAACP,WAAW,CAAC,CAACI,SAAS,EAAE;IACpE,IAAI,CAACJ,WAAW,GAAG,EAAE;EACvB;EAAC,QAAAnG,CAAA;qBApCUyB,kBAAkB,EAAAxB,+DAAA,CAAAE,4DAAA,GAAAF,+DAAA,CAAAI,gFAAA;EAAA;EAAA,QAAAE,EAAA;UAAlBkB,kBAAkB;IAAAjB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAgG,4BAAA9F,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ/Bb,4DAAA,aAAkB;QAILA,wDAAA,2BAAA4G,2DAAA5C,MAAA;UAAA,OAAAlD,GAAA,CAAAoF,WAAA,GAAAlC,MAAA;QAAA,EAAyB;QADhChE,0DAAA,EAEsB;QACtBA,4DAAA,eAAyB;QAAAA,oDAAA,eAAQ;QAAAA,0DAAA,EAAQ;QACzCA,4DAAA,gBAGsB;QADdA,wDAAA,mBAAA6G,oDAAA;UAAA,OAAS/F,GAAA,CAAA0F,QAAA,EAAU;QAAA,EAAC;QACNxG,oDAAA,aAAM;QAAAA,0DAAA,EAAS;QAGzCA,4DAAA,iBAG+C;QAC7CA,wDAAA,IAAA8G,yCAAA,0BAQc,KAAAC,0CAAA;QAwEhB/G,0DAAA,EAAU;;;QA7FCA,uDAAA,GAAyB;QAAzBA,wDAAA,YAAAc,GAAA,CAAAoF,WAAA,CAAyB;QAS3BlG,uDAAA,GAA0B;QAA1BA,wDAAA,UAAAc,GAAA,CAAAjC,cAAA,GAA0B,eAAAmB,6DAAA,IAAA2D,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbqB;;;;;;;;;;;;;;;ICEtD3D,4DAAA,aAAgE;IAC9DA,oDAAA,aACA;IAAAA,uDAAA,gBAAuB;IACvBA,4DAAA,aAAyC;IAG5BA,wDAAA,2BAAAgH,wEAAAhD,MAAA;MAAAhE,2DAAA,CAAAiH,GAAA;MAAA,MAAAC,MAAA,GAAAlH,2DAAA;MAAA,OAAAA,yDAAA,CAAAkH,MAAA,CAAAC,iBAAA,GAAAnD,MAAA;IAAA,EAA+B;IAIHhE,0DAAA,EAAY;;;;IAAxCA,uDAAA,GAA2B;IAA3BA,wDAAA,CAAAA,6DAAA,IAAA2D,GAAA,EAA2B;IAN3B3D,wDAAA,YAAAqH,MAAA,CAAAC,eAAA,GAA6B,4BAAAD,MAAA,CAAAF,iBAAA;;;;;IAY5CnH,4DAAA,aAAgE;IAC9DA,oDAAA,cACA;IAAAA,uDAAA,gBAAuB;IACvBA,4DAAA,aAA8C;IAC5CA,uDAAA,mBAEmD;IACrDA,0DAAA,EAAM;;;;IADOA,uDAAA,GAA2B;IAA3BA,wDAAA,CAAAA,6DAAA,IAAA2D,GAAA,EAA2B;IAF3B3D,wDAAA,YAAAuH,MAAA,CAAAJ,iBAAA,CAA6B;;;ADV1C,MAAO1F,aAAa;EAIxBhD,YACUwH,YAAmB,EACpBvH,gBAAkC;IADjC,KAAAuH,YAAY,GAAZA,YAAY;IACb,KAAAvH,gBAAgB,GAAhBA,gBAAgB;IAEvB,IAAI,CAACyI,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAACG,eAAe,GAAG5I,gBAAgB,CAACI,cAAc;IAEtD,IAAI,CAACmH,YAAY,CAACE,QAAQ,CACxB,8BAA8B,IAAI,CAACmB,eAAe,EAAE,CAACtI,MAAM,IAAI,CAChE;IAEDT,qDAAM,CAAC,MAAK;MACV,IAAI,CAAC0H,YAAY,CAACE,QAAQ,CACxB,yBAAyB,IAAI,CAACmB,eAAe,EAAE,CAACtI,MAAM,IAAI,CAC3D;IACH,CAAC,CAAC;EACJ;EAAC,QAAAe,CAAA;qBApBU0B,aAAa,EAAAzB,+DAAA,CAAAE,4DAAA,GAAAF,+DAAA,CAAAI,gFAAA;EAAA;EAAA,QAAAE,EAAA;UAAbmB,aAAa;IAAAlB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA6G,uBAAA3G,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ1Bb,4DAAA,iBAAY;QACVA,wDAAA,IAAAyH,oCAAA,yBAcc,IAAAC,oCAAA;QAchB1H,0DAAA,EAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBP,MAAOsB,gBAAgB;EAL7B7C,YAAA;IAME,KAAAkJ,UAAU,GAAG,KAAK;;EAElBC,QAAQA,CAAA;IACN,IAAI,CAACD,UAAU,GAAG,KAAK;EACzB;EAEAE,MAAMA,CAAA;IACJ,IAAI,CAACF,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;EACpC;EAAC,QAAA5H,CAAA;qBATUuB,gBAAgB;EAAA;EAAA,QAAAhB,EAAA;UAAhBgB,gBAAgB;IAAAf,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAmH,0BAAAjH,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP7Bb,4DAAA,aAAQ;QAIsBA,oDAAA,oBAAa;QAAAA,0DAAA,EAAI;QACzCA,4DAAA,gBAM2B;QAAnBA,wDAAA,mBAAA+H,kDAAA;UAAA,OAASjH,GAAA,CAAA+G,MAAA,EAAQ;QAAA,EAAC;QACxB7H,uDAAA,cAAyC;QAC3CA,0DAAA,EAAS;QACTA,4DAAA,aACsC;QAMRA,oDAAA,iBAAS;QAAAA,0DAAA,EAAI;QAEvCA,4DAAA,aACyC;QAEXA,oDAAA,YAAI;QAAAA,0DAAA,EAAI;QAEtCA,4DAAA,aACyC;QAETA,oDAAA,cAAM;QAAAA,0DAAA,EAAI;QAE1CA,4DAAA,aACyC;QAENA,oDAAA,iBAAS;QAAAA,0DAAA,EAAI;;;QAhCjDA,uDAAA,GAAoB;QAApBA,wDAAA,eAAAA,6DAAA,KAAA2D,GAAA,EAAoB;QAMf3D,uDAAA,GAAiC;QAAjCA,yDAAA,kBAAAc,GAAA,CAAA6G,UAAA,CAAiC;QAKpC3H,uDAAA,GAAgC;QAAhCA,wDAAA,YAAAA,6DAAA,KAAAkI,GAAA,EAAApH,GAAA,CAAA6G,UAAA,EAAgC;QAG7B3H,uDAAA,GAAoC;QAApCA,wDAAA,qBAAAA,6DAAA,KAAAmI,GAAA,EAAoC,4BAAAnI,6DAAA,KAAAoI,GAAA;QAGnCpI,uDAAA,GAAoB;QAApBA,wDAAA,eAAAA,6DAAA,KAAA2D,GAAA,EAAoB;QAGrB3D,uDAAA,GAAoC;QAApCA,wDAAA,qBAAAA,6DAAA,KAAAmI,GAAA,EAAoC;QAEnCnI,uDAAA,GAAwB;QAAxBA,wDAAA,eAAAA,6DAAA,KAAAqI,GAAA,EAAwB;QAGzBrI,uDAAA,GAAoC;QAApCA,wDAAA,qBAAAA,6DAAA,KAAAmI,GAAA,EAAoC;QAEnCnI,uDAAA,GAA0B;QAA1BA,wDAAA,eAAAA,6DAAA,KAAAsI,GAAA,EAA0B;QAG3BtI,uDAAA,GAAoC;QAApCA,wDAAA,qBAAAA,6DAAA,KAAAmI,GAAA,EAAoC;QAEnCnI,uDAAA,GAA6B;QAA7BA,wDAAA,eAAAA,6DAAA,KAAAuI,GAAA,EAA6B;;;;;;;;;;;;;;;;;;;;;;AC7BtC,MAAO7G,eAAe;EAAA,QAAA3B,CAAA;qBAAf2B,eAAe;EAAA;EAAA,QAAApB,EAAA;UAAfoB,eAAe;IAAAnB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAE,QAAA,WAAA6H,yBAAA3H,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP5Bb,4DAAA,QAAG;QAAAA,oDAAA,oBAAa;QAAAA,0DAAA,EAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC0B;AACC;AACC;AACE;AACE;AACJ;AACE;AACA;AACN;AACA;;AA4BtC,MAAO2B,aAAa;EAAA,QAAA5B,CAAA;qBAAb4B,aAAa;EAAA;EAAA,QAAArB,EAAA;UAAbqB;EAAa;EAAA,QAAAI,EAAA;cAvBtB0G,wDAAY,EACZC,yDAAY,EACZC,0DAAa,EACbC,4DAAc,EACdC,8DAAe,EACfC,0DAAa,EACbC,4DAAc,EACdC,4DAAc,EACdC,sDAAW,EACXC,uDAAW,EAGXT,wDAAY,EACZE,0DAAa,EACbC,4DAAc,EACdC,8DAAe,EACfC,0DAAa,EACbC,4DAAc,EACdC,4DAAc,EACdC,sDAAW,EACXC,uDAAW;EAAA;;;sHAGFvH,aAAa;IAAAK,OAAA,GAvBtByG,wDAAY,EACZC,yDAAY,EACZC,0DAAa,EACbC,4DAAc,EACdC,8DAAe,EACfC,0DAAa,EACbC,4DAAc,EACdC,4DAAc,EACdC,sDAAW,EACXC,uDAAW;IAAAC,OAAA,GAGXV,wDAAY,EACZE,0DAAa,EACbC,4DAAc,EACdC,8DAAe,EACfC,0DAAa,EACbC,4DAAc,EACdC,4DAAc,EACdC,sDAAW,EACXC,uDAAW;EAAA;AAAA;;;;;;;;;;;;;;;;;ACjCoD;AACrB;;;AAMxC,MAAO/I,gBAAgB;EAI3B1B,YAC8B6K,OAAe,EACnCC,IAAgB;IADI,KAAAD,OAAO,GAAPA,OAAO;IAC3B,KAAAC,IAAI,GAAJA,IAAI;IAJN,KAAAC,eAAe,GAAGJ,qDAAM,CAAkB,EAAE,CAAC;IAMnD,IAAI,CAACK,aAAa,GAAG,IAAIJ,oEAA4B,EAAE,CACpDM,OAAO,CAAC,+BAA+B,CAAC,CACxCC,sBAAsB,EAAE,CACxBC,KAAK,EAAE;IAEV,IAAI,CAACC,eAAe,EAAE;IAEtB,IAAI,CAACP,IAAI,CACNQ,GAAG,CAAoB,IAAI,CAACT,OAAO,GAAG,eAAe,CAAC,CACtDhD,SAAS,CAAE0D,OAAO,IAAI;MACrB,IAAI,CAACR,eAAe,CAACS,MAAM,CAAEC,CAAC,IAAI;QAChCF,OAAO,CAACnL,cAAc,CAACW,OAAO,CAAEN,IAAI,IAAI;UACtCgL,CAAC,CAACC,IAAI,CAACjL,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,OAAOgL,CAAC;MACV,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;EAEQJ,eAAeA,CAAA;IACrB,IAAI,CAACL,aAAa,CACfW,KAAK,EAAE,CACPC,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAC7CC,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACC,GAAG,CAAC,mCAAmC,GAAGE,GAAG,CAAC,CAAC;IAEzE,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEA,IAAI5L,cAAcA,CAAA;IAChB,OAAO,IAAI,CAAC0K,eAAe,CAACmB,UAAU,EAAE;EAC1C;EAEOlE,gBAAgBA,CACrB3D,IAAY,EACZjD,QAAA,GAAmB,CAAC;IAEpB,OAAO,IAAI,CAAC0J,IAAI,CAACqB,IAAI,CAAS,IAAI,CAACtB,OAAO,GAAG,eAAe,EAAE;MAC5DxJ,QAAQ,EAAEgD,IAAI;MACdjD,QAAQ,EAAEA;KACX,CAAC;EACJ;EAEOwG,mBAAmBA,CACxBlH,EAAU,EACV2D,IAAY,EACZjD,QAAgB;IAEhB,OAAO,IAAI,CAAC0J,IAAI,CAACsB,GAAG,CAAS,IAAI,CAACvB,OAAO,GAAG,eAAe,EAAE;MAC3DnK,EAAE,EAAEA,EAAE;MACNW,QAAQ,EAAEgD,IAAI;MACdjD,QAAQ,EAAEA;KACX,CAAC;EACJ;EAEQ6K,kBAAkBA,CAAA;IACxB,IAAI,CAACjB,aAAa,CAACqB,EAAE,CAAC,oBAAoB,EAAGC,IAAmB,IAAI;MAClE,IAAI,CAACvB,eAAe,CAACS,MAAM,CAAEe,KAAsB,IAAI;QACrDA,KAAK,CAACb,IAAI,CAACY,IAAI,CAAC;QAChB,OAAOC,KAAK;MACd,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAI,CAACvB,aAAa,CAACqB,EAAE,CAAC,uBAAuB,EAAGC,IAAmB,IAAI;MACrE,IAAI,CAACvB,eAAe,CAACS,MAAM,CAAEe,KAAsB,IAAI;QACrD,MAAMzE,KAAK,GAAGyE,KAAK,CAACC,SAAS,CAAEf,CAAC,IAAKA,CAAC,CAAC/K,EAAE,IAAI4L,IAAI,CAAC5L,EAAE,CAAC;QACrD,IAAIoH,KAAK,IAAI,CAAC,CAAC,EAAE;UACfyE,KAAK,CAACb,IAAI,CAACY,IAAI,CAAC;SACjB,MAAM;UACLC,KAAK,CAACzE,KAAK,CAAC,GAAGwE,IAAI;;QAGrB,OAAOC,KAAK;MACd,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAAC,QAAAjL,CAAA;qBAnFUI,gBAAgB,EAAAH,sDAAA,CAKjB,UAAU,GAAAA,sDAAA,CAAAE,4DAAA;EAAA;EAAA,QAAAI,EAAA;WALTH,gBAAgB;IAAAiL,OAAA,EAAhBjL,gBAAgB,CAAAkL,IAAA;IAAAC,UAAA,EAFf;EAAM;;;;;;;;;;;;;;;;;;ACLmB;;;AAKjC,MAAOlI,gBAAgB;EAC3B3E,YAC8B6K,OAAe,EACnCC,IAAgB;IADI,KAAAD,OAAO,GAAPA,OAAO;IAC3B,KAAAC,IAAI,GAAJA,IAAI;EACX;EAEIpG,KAAKA,CAAA;IACVmH,OAAO,CAACC,GAAG,CAAC,UAAU,GAAG,IAAI,CAACjB,OAAO,CAAC;IACtC,OAAO,IAAI,CAACC,IAAI,CACbQ,GAAG,CAAoB,IAAI,CAACT,OAAO,GAAG,eAAe,CAAC,CACtDiC,IAAI,CAACtM,yCAAG,CAAEiL,CAAC,IAAKA,CAAC,CAACjH,SAAS,CAAC,CAAC;EAClC;EAAC,QAAAlD,CAAA;qBAXUqD,gBAAgB,EAAApD,sDAAA,CAEjB,UAAU,GAAAA,sDAAA,CAAAE,4DAAA;EAAA;EAAA,QAAAI,EAAA;WAFT8C,gBAAgB;IAAAgI,OAAA,EAAhBhI,gBAAgB,CAAAiI,IAAA;IAAAC,UAAA,EAFf;EAAM;;;;;;;;;;;;;;;ACLpB;AACA;AACA;AAEO,MAAME,WAAW,GAAG;EACzBC,UAAU,EAAE;CACb;AAED;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;ACf+C;AAGF;AACY;AAEnD,SAAUE,UAAUA,CAAA;EACxB,OAAOC,QAAQ,CAACC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI;AACtD;AAEA,MAAMC,SAAS,GAAG,CAAC;EAAEC,OAAO,EAAE,UAAU;EAAEC,UAAU,EAAEN,UAAU;EAAEO,IAAI,EAAE;AAAE,CAAE,CAAC;AAE7E,IAAIV,6EAAsB,EAAE;EAC1BE,6DAAc,EAAE;;AAGlBS,sEAAA,CAAuBJ,SAAS,CAAC,CAC9BM,eAAe,CAACxK,sDAAS,CAAC,CAC1B2I,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC,CAAC","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/externals/externals.component.ts","./src/app/externals/externals.component.html","./src/app/inventory/inventory.component.ts","./src/app/inventory/inventory.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/nav-menu/nav-menu.component.ts","./src/app/nav-menu/nav-menu.component.html","./src/app/orders/orders.component.ts","./src/app/orders/orders.component.html","./src/app/primeng/primeng.module.ts","./src/app/services/InventoryService.service.ts","./src/app/services/externals.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, Signal, effect } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport {\r\n  InventoryItem,\r\n  InventoryService,\r\n} from './services/InventoryService.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent {\r\n  inventoryIds: string[] = [];\r\n  inventoryItems: Signal<InventoryItem[]>;\r\n\r\n  constructor(\r\n    serviceInventory: InventoryService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.inventoryItems = serviceInventory.InventoryItems;\r\n\r\n    effect(() => {\r\n      this.notifyInventoryItemAdded();\r\n    });\r\n  }\r\n\r\n  private notifyInventoryItemAdded(): void {\r\n    if (this.inventoryIds.length === 0) {\r\n      this.inventoryIds = this.inventoryItems().map((item) => item.id);\r\n      return;\r\n    }\r\n\r\n    const difference = this.inventoryItems()\r\n      .map((i) => i.id)\r\n      .filter((id) => !this.inventoryIds.includes(id));\r\n\r\n    difference.forEach((id) => {\r\n      const item = this.inventoryItems().filter((item) => item.id === id)[0];\r\n      this.messageService.add({\r\n        severity: 'info',\r\n        summary: 'New item!',\r\n        detail: `Just added ${item.quantity} ${item.itemName} to the inventory.`,\r\n      });\r\n    });\r\n\r\n    this.inventoryIds = this.inventoryItems().map((item) => item.id);\r\n  }\r\n}\r\n","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n  <p-toast position=\"bottom-right\"></p-toast>\r\n  <main class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </main>\r\n</body>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\n\r\nimport { ExternalsComponent } from './externals/externals.component';\r\nimport { InventoryComponent } from './inventory/inventory.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { OrdersComponent } from './orders/orders.component';\r\nimport { PrimengModule } from './primeng/primeng.module';\r\nimport { MessageService } from 'primeng/api';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    ExternalsComponent,\r\n    InventoryComponent,\r\n    MenuComponent,\r\n    OrdersComponent,\r\n  ],\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    PrimengModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: '/inventory',\r\n      },\r\n      { path: 'inventory', component: InventoryComponent },\r\n      { path: 'menu', component: MenuComponent },\r\n      { path: 'orders', component: OrdersComponent },\r\n      { path: 'externals', component: ExternalsComponent },\r\n    ]),\r\n  ],\r\n  providers: [MessageService],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Observable } from 'rxjs';\nimport {\n  ExternalsService,\n  ExternalSite,\n} from './../services/externals.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-externals',\n  templateUrl: './externals.component.html',\n  styleUrls: ['./externals.component.css'],\n})\nexport class ExternalsComponent {\n  products$: Observable<ExternalSite[]>;\n\n  constructor(public externals: ExternalsService) {\n    this.products$ = externals.Sites();\n  }\n}\n","<p-table [value]=\"(products$ | async)!\"\n         [tableStyle]=\"{ 'min-width': '50rem' }\">\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th>Name</th>\n      <th>Credentials</th>\n      <th>Information</th>\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\"\n               let-product>\n    <tr>\n      <td><a [href]=product.address\n           target=\"_blank\">{{ product.name }}</a></td>\n      <td>{{ product.credentials }}</td>\n      <td>{{ product.information }}</td>\n    </tr>\n  </ng-template>\n</p-table>","import { Component, Signal, effect } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport {\n  InventoryItem,\n  InventoryService,\n} from '../services/InventoryService.service';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css'],\n})\nexport class InventoryComponent {\n  inventoryItems: Signal<InventoryItem[]>;\n  inventoryIds: string[] = [];\n  newItemName: string = '';\n\n  constructor(\n    private serviceTitle: Title,\n    public serviceInventory: InventoryService\n  ) {\n    this.serviceTitle.setTitle('BurgerLink.Ui > Inventory');\n    this.inventoryItems = serviceInventory.InventoryItems;\n\n    effect(() => {\n      this.serviceTitle.setTitle(\n        `BurgerLink.Ui > Inventory (${this.inventoryItems().length}) `\n      );\n    });\n  }\n\n  onRowEditInit(inventoryItem: InventoryItem) {}\n\n  onRowEditSave(inventoryItem: InventoryItem) {\n    this.serviceInventory\n      .ModifyInventoryItem(\n        inventoryItem.id,\n        inventoryItem.itemName,\n        inventoryItem.quantity\n      )\n      .subscribe();\n  }\n\n  onRowEditCancel(inventoryItem: InventoryItem, index: number) {}\n\n  onSubmit() {\n    this.serviceInventory.AddInventoryItem(this.newItemName).subscribe();\n    this.newItemName = '';\n  }\n}\n","<div class=\"card\">\n  <div>\n    <span class=\"p-float-label\">\n      <input pInputText\n             [(ngModel)]=\"newItemName\"\n             id=\"addItem\" />\n      <label htmlFor=\"addItem\">Add Item</label>\n      <button pButton\n              pRipple\n              (click)=\"onSubmit()\"\n              type=\"button\">Submit</button>\n    </span>\n  </div>\n  <p-table [value]=\"inventoryItems()\"\n           dataKey=\"id\"\n           editMode=\"row\"\n           [tableStyle]=\"{'min-width': '50rem'}\">\n    <ng-template pTemplate=\"header\">\n      <tr>\n        <th style=\"width:25%\">Id</th>\n        <th pSortableColumn=\"itemName\"><p-sortIcon field=\"itemName\"></p-sortIcon>Name</th>\n        <th pSortableColumn=\"quantity\"\n            style=\"width:10%\"><p-sortIcon field=\"quantity\"></p-sortIcon>Quantity</th>\n        <th style=\"width:25%\">Modify</th>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\"\n                 let-inventoryItem\n                 let-editing=\"editing\"\n                 let-ri=\"rowIndex\">\n      <tr [pEditableRow]=\"inventoryItem\">\n        <td>\n          <p-cellEditor>\n            <ng-template pTemplate=\"input\">\n              <label>{{ inventoryItem.id }}</label>\n            </ng-template>\n            <ng-template pTemplate=\"output\">\n              {{inventoryItem.id}}\n            </ng-template>\n          </p-cellEditor>\n        </td>\n        <td>\n          <p-cellEditor>\n            <ng-template pTemplate=\"input\">\n              <input pInputText\n                     type=\"text\"\n                     [(ngModel)]=\"inventoryItem.itemName\"\n                     required>\n            </ng-template>\n            <ng-template pTemplate=\"output\">\n              {{inventoryItem.itemName }}\n            </ng-template>\n          </p-cellEditor>\n        </td>\n        <td>\n          <p-cellEditor>\n            <ng-template pTemplate=\"input\">\n              <input pInputText\n                     type=\"text\"\n                     [(ngModel)]=\"inventoryItem.quantity\"\n                     required>\n            </ng-template>\n            <ng-template pTemplate=\"output\">\n              {{inventoryItem.quantity}}\n            </ng-template>\n          </p-cellEditor>\n        </td>\n        <td>\n          <div class=\"flex align-items-center justify-content-center gap-2\">\n            <button *ngIf=\"!editing\"\n                    pButton\n                    pRipple\n                    type=\"button\"\n                    pInitEditableRow\n                    icon=\"pi pi-pencil\"\n                    (click)=\"onRowEditInit(inventoryItem)\"\n                    class=\"p-button-rounded p-button-text\"></button>\n            <button *ngIf=\"editing\"\n                    pButton\n                    pRipple\n                    type=\"button\"\n                    pSaveEditableRow\n                    icon=\"pi pi-check\"\n                    (click)=\"onRowEditSave(inventoryItem)\"\n                    class=\"p-button-rounded p-button-text p-button-success mr-2\"></button>\n            <button *ngIf=\"editing\"\n                    pButton\n                    pRipple\n                    icon=\"pi pi-times\"\n                    type=\"button\"\n                    pCancelEditableRow\n                    (click)=\"onRowEditCancel(inventoryItem, ri)\"\n                    class=\"p-button-rounded p-button-text p-button-danger\"></button>\n          </div>\n        </td>\n      </tr>\n    </ng-template>\n  </p-table>\n</div>","import { Component, Signal, effect } from '@angular/core';\r\nimport {\r\n  InventoryItem,\r\n  InventoryService,\r\n} from '../services/InventoryService.service';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css'],\r\n})\r\nexport class MenuComponent {\r\n  menuItemOptions: Signal<InventoryItem[]>;\r\n  selectedMenuItems: InventoryItem[];\r\n\r\n  constructor(\r\n    private serviceTitle: Title,\r\n    public serviceInventory: InventoryService\r\n  ) {\r\n    this.selectedMenuItems = [];\r\n    this.menuItemOptions = serviceInventory.InventoryItems;\r\n\r\n    this.serviceTitle.setTitle(\r\n      `BurgerLink.Ui > Inventory (${this.menuItemOptions().length}) `\r\n    );\r\n\r\n    effect(() => {\r\n      this.serviceTitle.setTitle(\r\n        `BurgerLink.Ui > Menu (${this.menuItemOptions().length}) `\r\n      );\r\n    });\r\n  }\r\n}\r\n","<p-splitter>\r\n  <ng-template pTemplate>\r\n    <div class=\"col flex align-items-center justify-content-center\">\r\n      Menu\r\n      <p-divider></p-divider>\r\n      <div class=\"flex justify-content-center\">\r\n        <p-listbox [options]=\"menuItemOptions()\"\r\n                   [filter]=\"true\"\r\n                   [(ngModel)]=\"selectedMenuItems\"\r\n                   [multiple]=\"true\"\r\n                   optionLabel=\"itemName\"\r\n                   [metaKeySelection]=\"true\"\r\n                   [style]=\"{'width':'15rem'}\"></p-listbox>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate>\r\n    <div class=\"col flex align-items-center justify-content-center\">\r\n      Order\r\n      <p-divider></p-divider>\r\n      <div class=\"card flex justify-content-center\">\r\n        <p-listbox [options]=\"selectedMenuItems\"\r\n                   optionLabel=\"itemName\"\r\n                   [style]=\"{'width':'15rem'}\"></p-listbox>\r\n      </div>\r\n    </div>\r\n\r\n  </ng-template>\r\n</p-splitter>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","<header>\r\n  <nav class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\">\r\n    <div class=\"container\">\r\n      <a class=\"navbar-brand\"\r\n         [routerLink]=\"['/']\">BurgerLink.Ui</a>\r\n      <button class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\".navbar-collapse\"\r\n              aria-label=\"Toggle navigation\"\r\n              [attr.aria-expanded]=\"isExpanded\"\r\n              (click)=\"toggle()\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"navbar-collapse collapse d-sm-inline-flex justify-content-end\"\r\n           [ngClass]=\"{ show: isExpanded }\">\r\n        <ul class=\"navbar-nav flex-grow\">\r\n          <li class=\"nav-item\"\r\n              [routerLinkActive]=\"['link-active']\"\r\n              [routerLinkActiveOptions]=\"{ exact: true }\">\r\n            <a class=\"nav-link text-dark\"\r\n               [routerLink]=\"['/']\">Inventory</a>\r\n          </li>\r\n          <li class=\"nav-item\"\r\n              [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\"\r\n               [routerLink]=\"['/menu']\">Menu</a>\r\n          </li>\r\n          <li class=\"nav-item\"\r\n              [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\"\r\n               [routerLink]=\"['/orders']\">Orders</a>\r\n          </li>\r\n          <li class=\"nav-item\"\r\n              [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\"\r\n               [routerLink]=\"['/externals']\">Externals</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</header>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent {\n\n}\n","<p>orders works!</p>\n","import { NgModule } from '@angular/core';\nimport { ButtonModule } from 'primeng/button';\nimport { CommonModule } from '@angular/common';\nimport { DividerModule } from 'primeng/divider';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ListboxModule } from 'primeng/listbox';\nimport { PickListModule } from 'primeng/picklist';\nimport { SplitterModule } from 'primeng/splitter';\nimport { TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    ButtonModule,\n    CommonModule,\n    DividerModule,\n    DropdownModule,\n    InputTextModule,\n    ListboxModule,\n    PickListModule,\n    SplitterModule,\n    TableModule,\n    ToastModule,\n  ],\n  exports: [\n    ButtonModule,\n    DividerModule,\n    DropdownModule,\n    InputTextModule,\n    ListboxModule,\n    PickListModule,\n    SplitterModule,\n    TableModule,\n    ToastModule,\n  ],\n})\nexport class PrimengModule {}\n","import { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable, Signal, signal } from '@angular/core';\nimport * as signalR from '@microsoft/signalr';\nimport { HubConnection } from '@microsoft/signalr';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InventoryService {\n  private hubConnection: HubConnection;\n  private _inventoryState = signal<InventoryItem[]>([]);\n\n  constructor(\n    @Inject('BASE_URL') private baseUrl: string,\n    private http: HttpClient\n  ) {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n      .withUrl('https://localhost:7221/events')\n      .withAutomaticReconnect()\n      .build();\n\n    this.startConnection();\n\n    this.http\n      .get<InventoryResponse>(this.baseUrl + 'api/inventory')\n      .subscribe((results) => {\n        this._inventoryState.update((x) => {\n          results.inventoryItems.forEach((item) => {\n            x.push(item);\n          });\n\n          return x;\n        });\n      });\n  }\n\n  private startConnection() {\n    this.hubConnection\n      .start()\n      .then(() => console.log('Connection started'))\n      .catch((err) => console.log('Error while starting connection: ' + err));\n\n    this.configureHubEvents();\n  }\n\n  get InventoryItems(): Signal<InventoryItem[]> {\n    return this._inventoryState.asReadonly();\n  }\n\n  public AddInventoryItem(\n    name: string,\n    quantity: number = 1\n  ): Observable<number> {\n    return this.http.post<number>(this.baseUrl + 'api/inventory', {\n      itemName: name,\n      quantity: quantity,\n    });\n  }\n\n  public ModifyInventoryItem(\n    id: string,\n    name: string,\n    quantity: number\n  ): Observable<number> {\n    return this.http.put<number>(this.baseUrl + 'api/inventory', {\n      id: id,\n      itemName: name,\n      quantity: quantity,\n    });\n  }\n\n  private configureHubEvents() {\n    this.hubConnection.on('inventoryItemAdded', (data: InventoryItem) => {\n      this._inventoryState.update((value: InventoryItem[]) => {\n        value.push(data);\n        return value;\n      });\n    });\n\n    this.hubConnection.on('inventoryItemModified', (data: InventoryItem) => {\n      this._inventoryState.update((value: InventoryItem[]) => {\n        const index = value.findIndex((x) => x.id == data.id);\n        if (index == -1) {\n          value.push(data);\n        } else {\n          value[index] = data;\n        }\n\n        return value;\n      });\n    });\n  }\n}\n\nexport interface InventoryResponse {\n  inventoryItems: InventoryItem[];\n}\n\nexport interface InventoryItem {\n  id: string;\n  itemName: string;\n  quantity: number;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable, map } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExternalsService {\n  constructor(\n    @Inject('BASE_URL') private baseUrl: string,\n    private http: HttpClient\n  ) {}\n\n  public Sites(): Observable<ExternalSite[]> {\n    console.log('BASE URL' + this.baseUrl);\n    return this.http\n      .get<ExternalsResponse>(this.baseUrl + 'api/externals')\n      .pipe(map((x) => x.externals));\n  }\n}\n\nexport interface ExternalsResponse {\n  externals: ExternalSite[];\n}\n\nexport interface ExternalSite {\n  name: string;\n  address: string;\n  credentials: string;\n  information: string;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [{ provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers)\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.log(err));\r\n"],"names":["effect","AppComponent","constructor","serviceInventory","messageService","inventoryIds","inventoryItems","InventoryItems","notifyInventoryItemAdded","length","map","item","id","difference","i","filter","includes","forEach","add","severity","summary","detail","quantity","itemName","_","i0","ɵɵdirectiveInject","i1","InventoryService","i2","MessageService","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","BrowserModule","FormsModule","HttpClientModule","RouterModule","NavMenuComponent","ExternalsComponent","InventoryComponent","MenuComponent","OrdersComponent","PrimengModule","BrowserAnimationsModule","AppModule","bootstrap","_3","imports","forRoot","path","pathMatch","redirectTo","component","declarations","ɵɵtext","ɵɵadvance","ɵɵproperty","product_r2","address","ɵɵsanitizeUrl","ɵɵtextInterpolate","name","credentials","information","externals","products$","Sites","ExternalsService","ExternalsComponent_Template","ɵɵtemplate","ExternalsComponent_ng_template_2_Template","ExternalsComponent_ng_template_3_Template","ɵɵpipeBind1","ɵɵpureFunction0","_c0","inventoryItem_r2","ɵɵtextInterpolate1","ɵɵlistener","InventoryComponent_ng_template_10_ng_template_7_Template_input_ngModelChange_0_listener","$event","ɵɵrestoreView","_r18","ɵɵnextContext","$implicit","ɵɵresetView","InventoryComponent_ng_template_10_ng_template_11_Template_input_ngModelChange_0_listener","_r23","InventoryComponent_ng_template_10_button_15_Template_button_click_0_listener","_r28","ctx_r26","onRowEditInit","InventoryComponent_ng_template_10_button_16_Template_button_click_0_listener","_r31","ctx_r29","onRowEditSave","InventoryComponent_ng_template_10_button_17_Template_button_click_0_listener","_r34","ctx_r33","ri_r4","rowIndex","ctx_r32","onRowEditCancel","InventoryComponent_ng_template_10_ng_template_3_Template","InventoryComponent_ng_template_10_ng_template_4_Template","InventoryComponent_ng_template_10_ng_template_7_Template","InventoryComponent_ng_template_10_ng_template_8_Template","InventoryComponent_ng_template_10_ng_template_11_Template","InventoryComponent_ng_template_10_ng_template_12_Template","InventoryComponent_ng_template_10_button_15_Template","InventoryComponent_ng_template_10_button_16_Template","InventoryComponent_ng_template_10_button_17_Template","editing_r3","serviceTitle","newItemName","setTitle","inventoryItem","ModifyInventoryItem","subscribe","index","onSubmit","AddInventoryItem","Title","InventoryComponent_Template","InventoryComponent_Template_input_ngModelChange_3_listener","InventoryComponent_Template_button_click_6_listener","InventoryComponent_ng_template_9_Template","InventoryComponent_ng_template_10_Template","MenuComponent_ng_template_1_Template_p_listbox_ngModelChange_4_listener","_r3","ctx_r2","selectedMenuItems","ɵɵstyleMap","ctx_r0","menuItemOptions","ctx_r1","MenuComponent_Template","MenuComponent_ng_template_1_Template","MenuComponent_ng_template_2_Template","isExpanded","collapse","toggle","NavMenuComponent_Template","NavMenuComponent_Template_button_click_5_listener","ɵɵattribute","ɵɵpureFunction1","_c1","_c2","_c3","_c4","_c5","_c6","OrdersComponent_Template","ButtonModule","CommonModule","DividerModule","DropdownModule","InputTextModule","ListboxModule","PickListModule","SplitterModule","TableModule","ToastModule","exports","signal","signalR","baseUrl","http","_inventoryState","hubConnection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","startConnection","get","results","update","x","push","start","then","console","log","catch","err","configureHubEvents","asReadonly","post","put","on","data","value","findIndex","ɵɵinject","HttpClient","factory","ɵfac","providedIn","pipe","environment","production","enableProdMode","getBaseUrl","document","getElementsByTagName","href","providers","provide","useFactory","deps","__NgCli_bootstrap_1","platformBrowser","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}